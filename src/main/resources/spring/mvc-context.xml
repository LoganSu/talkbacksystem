<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
  http://www.springframework.org/schema/aop
  http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context-3.2.xsd
  http://www.springframework.org/schema/mvc
  http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 加载配置属性文件 
	<context:property-placeholder
		ignore-unresolvable="true" location="classpath*:config/config.properties" />

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="applicationResources" />
	</bean>
-->
	   
	  <!-- spring 3.2版本以上解决json乱码 -->
	 <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                     <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                         <property name="failOnEmptyBeans" value="false" />
                     </bean>
                 </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven> 
   <!-- ====================================-->
    
	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
	<context:component-scan base-package="com.youlb"></context:component-scan>
	<aop:aspectj-autoproxy />
	<!-- 加载静态url -->
    <mvc:default-servlet-handler/>
	<!-- 统一异常处理类 
	<bean id="apuExceptionHandler" class="com.csair.apu.common.exception.handler.ApuExceptionHandler"></bean>
-->

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="order" value="1"></property>
	</bean>
<!-- 	 <mvc:interceptors>   -->
<!--         <mvc:interceptor>   -->
<!--             设置权限拦截的路径   -->
<!--             <mvc:mapping path="/*.do" />   -->
<!--             <bean class="com.csair.apu.web.interceptors.common.ApuFtpDownInterceptor">   -->
<!--             </bean>   -->
<!--         </mvc:interceptor>   -->
<!--     </mvc:interceptors>   -->
	
	<!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <!-- <mvc:default-servlet-handler/>-->
   <!-- 加载WEB-INF里面的静态资源 
	<mvc:resources location="/WEB-INF/js/" mapping="/js/**" />
	<mvc:resources location="/WEB-INF/css/" mapping="/css/**" />
	<mvc:resources location="/WEB-INF/images/" mapping="/images/**" />
	<mvc:resources location="/WEB-INF/view/error" mapping="/error/**" />
	<mvc:resources location="/WEB-INF/view/module-js" mapping="/module-js/**" />
 -->
	<!-- japser视图名称解析 -->
<!-- 	<bean id="jasperReportsViewResolver" -->
<!-- 		class="org.springframework.web.servlet.view.jasperreports.JasperReportsViewResolver"> -->
<!-- 		<property name="order" value="0" />	视图渲染优先级，此处为0，优先于渲染JSP -->
<!-- 		<property name="viewClass" value="com.csair.amms2.commons.utils.report.JasperReportView" />  继承于JasperReportsMultiFormatView -->
<!-- 		<property name="prefix" value="${web.report.prefix}" />	模板前缀 -->
<!-- 		<property name="suffix" value="${web.report.suffix}" />	模板后缀 -->
<!-- 		<property name="viewNames" value="${web.report.viewName}" />	试图渲染所有以"-report"结尾的视图名(viewName) -->
<!-- 		<property name="cache" value="false" />	缓存模板(false时，每次请求都会重新加载模板，建议debug模板时设置为false) -->
<!-- 		<property name="reportDataKey"> -->
<!-- 			<value>datasource</value> -->
<!-- 		</property> -->
<!-- 		<property name="exporterParameters">	渲染时的相关参数 -->
<!-- 			<map> -->
<!-- 				<entry -->
<!-- 					key="net.sf.jasperreports.engine.export.JRHtmlExporterParameter.CHARACTER_ENCODING" -->
<!-- 					value="UTF-8" /> -->
<!-- 				<entry -->
<!-- 					key="net.sf.jasperreports.engine.export.JRCsvExporterParameter.CHARACTER_ENCODING" -->
<!-- 					value="UTF-8" /> -->
<!-- 			</map> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	<!-- jasper end -->



	<!-- 配置日志拦截器 -->
	<!-- <mvc:interceptors>
		<bean class="com.csair.web.interceptors.LogInterceptor"></bean>
	</mvc:interceptors> -->
	<!-- 日志 end -->


	<!-- 上传文件拦截，设置最大上传文件大小 10M=10*1024*1024(B)=10485760 bytes-->
	<bean id="multipartResolver" class="com.youlb.utils.extend.CustomMultipartResolver">  
        <!-- set the max upload size100MB -->  
        <property name="maxUploadSize">  
            <value>104857600</value>  
        </property>  
        <property name="maxInMemorySize">  
            <value>4096</value>  
        </property>
    </bean>
    <mvc:interceptors>
       <mvc:interceptor>
         <mvc:mapping path="/**/*file.do"/>
         <bean class="com.youlb.utils.interceptors.DeleteFileInterceptor" />
       </mvc:interceptor>
    </mvc:interceptors>
</beans>
  